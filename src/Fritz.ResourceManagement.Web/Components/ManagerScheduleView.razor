<h3>Schedule View</h3>
@inject Data.ScheduleState MyScheduleState
@inject IScheduleRepository ScheduleRepository


<div id="weekSelector">

	<a href="" onclick="@(() => ChangeDate(-7))">&lt;</a>
	@MyScheduleState.DisplayBeginDate.ToShortDateString() - @MyScheduleState.DisplayEndDate.AddDays(-1).ToShortDateString()
	<a href="" onclick="@(() => ChangeDate(7))">&gt;</a>

</div>

<div id="MyScheduleContainer">
	<DayView DayCount="7" DayDisplay="true" MyScheduleState="MyScheduleState"></DayView>
</div>


@functions {

	[Parameter]
	DateTime SelectedDate {
		get { return MyScheduleState.SelectedDate; }
		set { MyScheduleState.SelectDate(value); }
	}

	IEnumerable<Schedule> Schedules;

	protected override async Task OnParametersSetAsync()
	{

		MyScheduleState.DisplayBeginDate = SelectedDate.Subtract(TimeSpan.FromDays((int)SelectedDate.DayOfWeek));
		MyScheduleState.DisplayEndDate = MyScheduleState.DisplayBeginDate.AddDays(7);

		Schedules = await ScheduleRepository.GetSchedulesAsync(MyScheduleState.DisplayBeginDate, MyScheduleState.DisplayEndDate);


	}

	void ChangeDate(int daysToChange)
	{
		SelectedDate = SelectedDate.AddDays(daysToChange);
	}

}
