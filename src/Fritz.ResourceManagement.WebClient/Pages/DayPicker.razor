@inject ViewModels.DayPickerViewModel Model
<div class="monthpicker">

	<button id="prevMonth" @onclick="Model.PrevMonth">&lt;</button>
	<div id="name">@Model.SelectedDate.ToString("MMMM yyyy")</div>
	<button id="nextMonth" @onclick="Model.NextMonth">&gt;</button>

	<span class="dow">Su</span>
	<span class="dow">M</span>
	<span class="dow">Tu</span>
	<span class="dow">W</span>
	<span class="dow">Th</span>
	<span class="dow">F</span>
	<span class="dow">Sa</span>

	@for (var i = 0; i < Model.FirstDayOfMonthDoW; i++)
	{
		<span></span>
	}

	@for (var i = 1; i <= Model.LastDayOfMonth; i++)
	{

		var thisDay = new DateTime(Model.SelectedDate.Year, Model.SelectedDate.Month, i);
		var today = (thisDay.Date == DateTime.Today.Date) ?
			"today" : null;
		var todayTitle = (string.IsNullOrEmpty(today)) ? null : "Today!";
		var hasAppt = Model.MyScheduleState.TimeSlots.Any(ts => ts.StartDateTime.Date == thisDay.Date) ?
			"appt" : null;
		var selected = (thisDay == Model.SelectedDate) ? "active" : null;

		<span class="@today @hasAppt @selected day" title="@todayTitle" @onclick="() => Model.MyScheduleState.SelectDate(thisDay)">@i</span>
	}

</div>
<button id="gotoToday" @onclick="Model.GotoToday">Today</button>

<span>Selected Date is: @Model.SelectedDate.ToShortDateString()</span>