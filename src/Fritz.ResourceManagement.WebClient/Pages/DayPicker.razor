@inherits ViewModels.DayPickerViewModel 
<div class="monthpicker">

	<button id="prevMonth" @onclick="PrevMonth">&lt;</button>
	<div id="name">@SelectedDate.ToString("MMMM yyyy")</div>
	<button id="nextMonth" @onclick="NextMonth">&gt;</button>

	<span class="dow">Su</span>
	<span class="dow">M</span>
	<span class="dow">Tu</span>
	<span class="dow">W</span>
	<span class="dow">Th</span>
	<span class="dow">F</span>
	<span class="dow">Sa</span>

	@for (var i = 0; i < FirstDayOfMonthDoW; i++)
	{
		<span></span>
	}

	@for (var i = 1; i <= LastDayOfMonth; i++)
	{
		// TODO: Simon G - Should be able to replace this loop with a ForEach over a new method Model.GetDaysOfMonthToRender() that returns List<DayOfMonthDisplayInfo> - Should wait for app UI running again to dev test before attempting.
		var displayInfo = this.DisplayDayOfMonth(i);
		<span class="@displayInfo.Today @displayInfo.HasAppointment @displayInfo.IsSelected day" title="@displayInfo.Title" @onclick="() => MyScheduleState.SelectDate(displayInfo.ThisDay)">@i</span>
	}

</div>
<button id="gotoToday" @onclick="GotoToday">Today</button>

<span>Selected Date is: @SelectedDate.ToShortDateString()</span>
